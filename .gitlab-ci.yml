variables:
  project_name: Gitlab-Semantic-Release
  SEMANTIC_RELEASE_PACKAGE: ${project_name}

stages:
  - test
  - build
  - release

test docker:
  stage: test
  image: registry.griefed.de/prosper/docker-with-buildx:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
  script:
    - docker buildx build
      --push
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --cache-from "$CI_REGISTRY_IMAGE:develop"
      --tag "$CI_REGISTRY_IMAGE:develop"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:develop" .

build-image:
  needs: ['test docker']
  stage: build
  image: registry.griefed.de/prosper/docker-with-buildx:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
  script:
    - docker buildx build
      --push
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --cache-from "$CI_REGISTRY_IMAGE:latest"
      --tag "$CI_REGISTRY_IMAGE:latest"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest" .
  only:
    - master
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

release:
  needs: ['build-image']
  stage: release
  image: "$CI_REGISTRY_IMAGE:latest"
  services:
    - docker:dind
  script:
    - env
    - npx semantic-release
  only:
    - master
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/
